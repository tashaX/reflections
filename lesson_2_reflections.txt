1.
Q: What happens when you initialize a repository? Why do you need to do it?
A: it creates .git subdirectory and master branch, maybe

2.
Q: How is the staging area different from the working directory and the repository?
What value do you think it offers?
A: It is the inbeetween area, where we make changes, I guess. Where we decide what changes to keep.

3.
Q: How can you use the staging area to make sure you have one commit per logical
change?
A: After every logical change i make, I can run git commit
I can compare changes between working directory and staging area and I can 
check what's been currently wriiten in staging area.

4.
Q: What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
A. When you want to make some big change to a project, like another version maybe,
something that is not just a bug. Branches help with that couse I can keep track of 
the original project, and also the new one.

5.
Q: How do the diagrams help you visualize the branch structure?
A: The way diagrams ususaly do, they visualize data. So I can see
my branches and their connections.

6.
Q: What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
A: I think that the result is: every line of code that is the same in some branch and master before 
branching, is kept, than branching is added, and all that was made after branching in master branch


7.
Q: What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
A: automatic merging saves a lot of time and nerves, but we have less control and 
maybe sometimes we will not get the code that is executable or it won't run properly
